/*

In this file:

// A. Modules
// B. Variables
// C. Border Utilies
// D. Border Color Utilities
// E. Border Radius Utilities

*/

//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use "sass:map";
@use "../breakpoints/style" as breakpoints;
@use "../color/style" as color;

//////////////////////////////////////////////
// B. Variables
//////////////////////////////////////////////

// Scoped to Root

:root {
    --default-border-width: 1px;
    
    --default-border-style: solid;

    --border-radius: 0.5em;
}

//////////////////////////////////////////////
// C. Border Utilies
//////////////////////////////////////////////

[class*="border"]:not([class*="theme-"]){
    border-color: inherit;
}

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        .border#{$mod} {
            border-width: var(--default-border-width);
            border-style: var(--default-border-style);
        }

        .border-top#{$mod} {
            border-top-width: var(--default-border-width);
            border-top-style: var(--default-border-style);
        }

        .border-right#{$mod} {
            border-right-width: var(--default-border-width);
            border-right-style: var(--default-border-style);
        }

        .border-bottom#{$mod} {
            border-bottom-width: var(--default-border-width);
            border-bottom-style: var(--default-border-style);
        }

        .border-left#{$mod} {
            border-left-width: var(--default-border-width);
            border-left-style: var(--default-border-style);
        }
        
    }
}

//////////////////////////////////////////////
// D. Border Color Utilities
//////////////////////////////////////////////

@each $name, $color-map in color.$theme-colors {

    .border-color-#{$name} {
        border-color: map.get( $color-map, "swatch") !important;
    }

    .border-top-color-#{$name} {
        border-top-color: map.get($color-map, "swatch") !important;
    }

    .border-right-color-#{$name} {
        border-right-color: map.get($color-map, "swatch") !important;
    }

    .border-bottom-color-#{$name} {
        border-bottom-color: map.get($color-map, "swatch") !important;
    }

    .border-left-color-#{$name} {
        border-left-color: map.get($color-map, "swatch") !important;
    }
}

//////////////////////////////////////////////
// E. Border Radius Utilities
//////////////////////////////////////////////

[class*="border-radius"]{
    overflow: hidden;
}

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        .border-radius#{$mod} {
            border-radius: var(--border-radius);
        }

        .border-radius-top#{$mod} {
            border-top-left-radius: var(--border-radius);
            border-top-right-radius: var(--border-radius);
        }

        .border-radius-right#{$mod} {
            border-top-right-radius: var(--border-radius);
            border-bottom-right-radius: var(--border-radius);
        }

        .border-radius-bottom#{$mod} {
            border-bottom-right-radius: var(--border-radius);
            border-bottom-left-radius: var(--border-radius);
        }

        .border-radius-left#{$mod} {
            border-top-left-radius: var(--border-radius) !important;
            border-bottom-left-radius: var(--border-radius) !important;
        }

        .border-radius-pill#{$mod} {
            border-radius: 40rem;
        }

        .border-radius-circle#{$mod} {
            border-radius: 100%;
        }

    }
}