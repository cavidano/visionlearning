/*

In this file:

// A. Modules
// A. Variables
// B. Responsive Border Utilies
// C. Border Color Utilities
// D. Border Radius Utilities

*/

//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use "sass:map";
@use "../breakpoint/style" as breakpoint;
@use "../color/style" as color;

//////////////////////////////////////////////
// B. Variables
//////////////////////////////////////////////

:root {
    --default-border-width: 1px;
    --default-border-style: solid;

    --border-radius: 0.25em;
}

//////////////////////////////////////////////
// C. Border Utilies
//////////////////////////////////////////////

hr {
    border-top-width: var(--default-border-width);
    border-top-style: var(--default-border-style);
}
 
[class*="border"]:not([class*="theme-"]){
    border-color: inherit;
}

@each $breakpoint in map.keys(breakpoint.$breakpoints) {
    @include breakpoint.breakpoints-up($breakpoint) {
        $mod: breakpoint.breakpoint-modifier($breakpoint, breakpoint.$breakpoints);

        .border#{$mod} {
            border-width: var(--default-border-width);
            border-style: var(--default-border-style);
        }

        .border-top#{$mod} {
            border-top-width: var(--default-border-width);
            border-top-style: var(--default-border-style);
        }

        .border-right#{$mod} {
            border-right-width: var(--default-border-width);
            border-right-style: var(--default-border-style);
        }

        .border-bottom#{$mod} {
            border-bottom-width: var(--default-border-width);
            border-bottom-style: var(--default-border-style);
        }

        .border-left#{$mod} {
            border-left-width: var(--default-border-width);
            border-left-style: var(--default-border-style);
        }

        .border-none#{$mod} {
            border: none;
        }

        .border-top-none#{$mod} {
            border-top: none;
        }

        .border-right-none#{$mod} {
            border-right: none;
        }

        .border-bottom-none#{$mod} {
            border-bottom: none;
        }

        .border-left-none#{$mod} {
            border-left: none;
        }
    }
}

//////////////////////////////////////////////
// D. Border Color Utilities
//////////////////////////////////////////////

@each $breakpoint in map.keys(breakpoint.$breakpoints) {
    @include breakpoint.breakpoints-up($breakpoint) {
        $mod: breakpoint.breakpoint-modifier($breakpoint, breakpoint.$breakpoints);

        @each $name, $color-map in color.$theme-colors {
            .border-#{$name}#{$mod} {
                border-color: map.get( $color-map, "swatch") !important;
            }

            .border-top-#{$name}#{$mod} {
                border-top-color: map.get($color-map, "swatch") !important;
            }

            .border-right-#{$name}#{$mod} {
                border-right-color: map.get($color-map, "swatch") !important;
            }

            .border-bottom-#{$name}#{$mod} {
                border-bottom-color: map.get($color-map, "swatch") !important;
            }

            .border-left-#{$name}#{$mod} {
                border-left-color: map.get($color-map, "swatch") !important;
            }
        }

    }
}

//////////////////////////////////////////////
// E. Border Radius Utilities
//////////////////////////////////////////////

[class*="rounded"]{
    overflow: hidden;
}

@each $breakpoint in map.keys(breakpoint.$breakpoints) {
    @include breakpoint.breakpoints-up($breakpoint) {
        $mod: breakpoint.breakpoint-modifier($breakpoint, breakpoint.$breakpoints);

        .rounded#{$mod} {
            border-radius: var(--border-radius);
        }

        .rounded-top#{$mod} {
            border-top-left-radius: var(--border-radius);
            border-top-right-radius: var(--border-radius);
        }

        .rounded-right#{$mod} {
            border-top-right-radius: var(--border-radius);
            border-bottom-right-radius: var(--border-radius);
        }

        .rounded-bottom#{$mod} {
            border-bottom-right-radius: var(--border-radius);
            border-bottom-left-radius: var(--border-radius);
        }

        .rounded-left#{$mod} {
            border-top-left-radius: var(--border-radius) !important;
            border-bottom-left-radius: var(--border-radius) !important;
        }

        .rounded-pill#{$mod} {
            border-radius: 40rem;
        }

        .rounded-circle#{$mod} {
            border-radius: 100%;
        }

    }
}