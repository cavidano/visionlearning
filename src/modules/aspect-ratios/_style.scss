/*

In this file:

// A. Modules
// B. Variables
// C. Selector Resets
// D. Apect Ratio Utilities

*/

//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use "sass:list";
@use "sass:math";
@use "sass:map";
@use "../breakpoints/style" as breakpoints;

//////////////////////////////////////////////
// B. Variables
//////////////////////////////////////////////

$aspect-ratios: (
    (16 9),
    (4 3),
    (3 2),
    (1 1)
);

// Scoped to Block

%aspect-ratio-custom-vars {
    --aspect-ratio-custom: 5 / 7;
}

////////////////////////////////////////
// C. Selector Resets
////////////////////////////////////////

iframe {
    display: block;
}

//////////////////////////////////////////////
// D. Apect Ratio Utilities
//////////////////////////////////////////////

[class*="aspect-ratio"] {
    width: 100%;
}

[class*="aspect-ratio-custom"] {
    @extend %aspect-ratio-custom-vars;
}

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        @each $aspect-ratio in $aspect-ratios {
            $aspect-ratio-x: list.nth($aspect-ratio, 1);
            $aspect-ratio-y: list.nth($aspect-ratio, 2);

            .aspect-ratio-#{$aspect-ratio-x}x#{$aspect-ratio-y}#{$mod} {
                aspect-ratio: math.div($aspect-ratio-x, $aspect-ratio-y);
                
                &[class*="backdrop--fixed"] {
                    min-height: unset;
                }

            }
        }

        .aspect-ratio-custom#{$mod} {
            aspect-ratio: var(--aspect-ratio-custom);
            
            &[class*="backdrop--fixed"] {
                min-height: unset;
            }

        }

        .aspect-ratio-unset#{$mod} { 
            aspect-ratio: unset;
        }

    }
}