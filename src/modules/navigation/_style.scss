/*

In this file:

// A. Modules
// B. Variables
// C. Placeholders 
// D. Nav Component 
// F. Nav Divider Modifier
// G. Nav Has Icons Modifier
// H. Nav Breadcrumb Component
// I. Nav Dropdown Elements 
// J. Primary Nav Components

*/

////////////////////////////////////////
// A. Modules
////////////////////////////////////////

@use "sass:map";
@use "../breakpoints/style" as breakpoints;
@use "../caret/style" as caret;
@use "../spacing/style" as spacing;
@use "../collapse/style" as collapse;
@use "../links/style" as links;
@use "../typography/style" as typography;

////////////////////////////////////////
// B. Variables
////////////////////////////////////////

// Scoped to Root

:root {
    --nav-gap: 0.75em;

    --nav-divider-padding-y: 0.625em;
    --nav-divider-padding-x: var(--spacer-3);

    --primary-nav-padding-x: var(--spacer-3);
    --primary-nav-padding-y: var(--spacer-2);

    --primary-nav-search-width: 200px;
}

////////////////////////////////////////
// C.  Placeholders 
////////////////////////////////////////

%list-style-nav {
    list-style: none;

    line-height: normal;

    > li {
        position: relative;
    }

    [aria-selected="true"],
    [aria-current] {
        font-weight: var(--body-font-weight-bold);

        text-decoration: underline;
    }
}

////////////////////////////////////////
// D. Nav Component
////////////////////////////////////////

.nav, 
.nav li > ul {
    @extend %list-style-nav;
}

.nav > li svg {
    fill: currentColor;
}

.nav:not([class*="nav--divider"]):not([class*="nav--breadcrumb"]) {
    > li:not(:last-child) {
        margin-block-end: var(--nav-gap);
    }

    > li > .button {
        min-height: 100%;
    }

    > li > [data-toggle="dropdown"][class*="-icon"] ~ ul {
        margin-inline-start: calc( var(--nav-gap) * -1);
        margin-inline-end: 0;
        margin-block-start: 1rem;

        width: 240px;
    }

    > li > .nav__dropdown {
        inset-inline-start: 0;
        
        width: calc(100% + (var(--nav-gap) * 2));
        
        margin-inline-start: calc(var(--nav-gap) * -1);
        margin-inline-end: calc(var(--nav-gap) * -1);

        padding: var(--nav-gap);
    }
}

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        .nav:not([class*="nav--divider"]).nav--horizontal#{$mod} {
            display: flex;
            align-items: center;

            margin-inline-start: calc(var(--nav-gap) * -1);
            margin-inline-end: calc(var(--nav-gap) * -1);

            > li {
                margin-inline-start: var(--nav-gap);
                margin-inline-end: var(--nav-gap);
                margin-bottom: 0 !important;
            }

            > li > .nav__dropdown {
                position: absolute;

                min-width: 200px;
            }

            > li > [data-toggle="dropdown"][class*="-icon"] ~ ul {
                left: 50%;

                transform: translateX(-50%);
                
                margin-inline-start: 0;

                &::after {
                    left: 50%;
                }
            }
        }

    }
}

////////////////////////////////////////
// F. Nav Divider Modifier
////////////////////////////////////////

.nav--divider {

    > li:not(:last-child) {
        border-bottom-width: var(--default-border-width);
        border-bottom-style: var(--default-border-style);
        border-bottom-color: inherit;
    }

    > li > a, 
    > li > button {
        position: relative;

        display: flex;

        width: 100%;
    }

    > li > a, 
    > li > button,
    > li > .nav__dropdown {
        padding: var(--nav-divider-padding-y) var(--nav-divider-padding-x);
    }

    > li > .nav__dropdown {
        border-top-width: 0 !important;
    }

    > li > a > * {
        margin-top: auto;
        margin-bottom: auto;
    }

    [data-toggle="dropdown"] {
        justify-content: space-between;
    }
}

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        .nav--divider.nav--horizontal#{$mod} {
            display: flex;
            align-items: stretch;

            > li {
                border-bottom-style: none !important;

                flex-grow: 1;
                flex-shrink: 0;
                
                display: flex;
                align-items: stretch;
            }

            > li:not(:last-child) {
                border-inline-end-width: var(--default-border-width);
                border-inline-end-style: var(--default-border-style);
            }

            > li > a, 
            > li > button {
                display: flex;
                justify-content: center;
            }

            &[class*="border"] {
                > li > .nav__dropdown {
                    border-top-width: 0;
                    border-width: var(--default-border-width);
                    border-style: var(--default-border-style);

                    width: calc(100% + (var(--default-border-width) * 2));
                }
            }

            .nav__dropdown {
                position: absolute;
                inset-inline-start: 0;

                width: 100%;
            }

            // For <ul> tags with borders applied

            &[class*="border"] .nav__dropdown {
                margin-inline-start: calc(var(--default-border-width) * -1);
            }
        }
    }
}


////////////////////////////////////////
// G. Nav Has Icons Modifier
////////////////////////////////////////

[class*="nav--has-icons"] {

    > li > a,
    > li > button {
        display: flex;
        align-items: center;

        &:hover,
        &:focus {
            .nav__text {
                text-decoration: underline;
            }
        }
    }

    .nav__text {
        margin-inline: 0.375em;
    }
}

////////////////////////////////////////
// H. Nav Breadcrumb Component
////////////////////////////////////////

.nav-breadcrumb {
    @extend %list-style-nav;

    --breadcrumb-font-size: var(--font-size-sm);

    display: flex;
    align-items: center;

    font-size: var(--breadcrumb-font-size);

    > li:last-child {
        font-style: italic;
        font-weight: bold;

        @extend .truncate-text;
    }
    
    > li:not(:last-child) {
        
        @extend .caret;
        
        &::before {
            margin-inline: var(--nav-gap) !important;

            transform: rotate(-90deg);

            [dir="rtl"] & {
                transform: rotate(90deg);
            }

        }
    }
}

////////////////////////////////////////
// I. Nav Dropdown Elements
////////////////////////////////////////

[data-toggle="dropdown"]:not([class*="button--icon-only"]) {    
    @extend .caret;

    &[aria-expanded="true"]::before {
        transform: rotate(180deg);
    }
}

[data-toggle="dropdown"][class*="-icon"] ~ ul {
    position: relative;
    --dropdown-pointer-size: 0.75rem;

    margin-top: 50px;
    overflow: visible;

    &::after {
        position: absolute;
        content: "";
        top: 0;
        inset-inline-start: calc(var(--nav-gap) + var(--dropdown-pointer-size) + 4px);
        
        transform: translateX(-50%) rotate(45deg);

        width:  var(--dropdown-pointer-size);
        height:  var(--dropdown-pointer-size);
        
        margin-top: calc( var(--dropdown-pointer-size) * -0.5 - var(--default-border-width) );

        background-color: inherit;

        border-color: inherit;
        border-left-width: inherit;
        border-left-style: inherit;
        border-top-width: inherit;
        border-top-style: inherit;
    }
}

.nav__dropdown {
    --dropdown-z-index: 1200;

    position: static;

    inset-block-start: 100%;

    width: 100%;

    z-index: var(--dropdown-z-index);

    font-size: var(--font-size-md);

    font-weight: normal;

    text-align: start;

    display: none;

    &.shown {
        display: block;
    }

    > li:not(:last-child) {
        margin-bottom: var(--nav-gap);
    }
}

//////////////////////////////////////////////
// J. Primary Nav Components
//////////////////////////////////////////////

[class*="primary-nav--"] {
    position: relative;

    display: grid;
    align-items: center;

    z-index: 1000; //???

    ul {
        @extend %list-style-nav;
    }

    > [class*="__logo"] {
        grid-area: logo;

        padding: var(--primary-nav-padding-y) var(--primary-nav-padding-x);
    }

    > [class*="__menu"] {
        grid-area: menu;

        @extend .collapse;

        padding: var(--primary-nav-padding-y) var(--primary-nav-padding-x);
    }

    > [class*="__actions"] {
        grid-area: buttons;

        display: flex;
        align-items: center;

        padding: var(--primary-nav-padding-y) var(--primary-nav-padding-x);

        > .button {
            margin-inline-end: var(--spacer-2);
        }
    }

    .form-entry:not([class*="active"]) .form-entry__field__input::after {
        display: none;
    }
}

[class*="primary-nav--inline--"] {
    --search-width: var(--primary-nav-search-width);

    justify-content: space-between;
    align-items: center;

    grid-template-columns: 1fr auto;
    grid-template-areas:
        "logo buttons"
        "menu menu";

    > [class*="__menu"] {
        align-self: stretch; 
        justify-content: end;

        > ul > li:not(:last-child) {
            margin-bottom: var(--nav-gap);
        }

    }

    form[role="search"] .form-entry__field {
        height: var(--button-icon-only-size);
        border-radius: var(--button-border-radius);
    }

}

[class*="primary-nav--below--"] {
    grid-template-columns: 100%;
    grid-template-areas:
        "logo"
        "buttons"
        "menu";

    > [class*="__logo"] {
        display: flex;
        justify-content: center;
    }
    
    > [class*="__actions"] {
        justify-content: space-between;

        padding: var(--primary-nav-padding-y) var(--primary-nav-padding-x);
    }

    > [class*="__actions"],
    > [class*="__menu"] {
        border-top-width: var(--default-border-width);
        border-top-style: var(--default-border-style);
        border-top-color: inherit;
    }

    form[role="search"]{
        
        .form-entry__field {
            --form-field-border-radius: 0;
            height: 100%;
        } 
    }
}

.primary-nav__menu {

    > ul > li {
        position: relative;

        &:not(:last-child) {
            margin-bottom: var(--nav-gap);
        }
    }

    > ul > li > a {
        @extend .expanded-link;
    }

    form[role="search"] {
        margin-top: var(--spacer-2);
    }

    .form-entry__field {
        border-width: var(--default-border-width);
        border-style: var(--default-border-style);
    }

    .nav__dropdown {
        padding: var(--nav-gap);
    }
}

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        .primary-nav--inline#{$mod},
        .primary-nav--below#{$mod} {

            [class*="__logo"] {
                display: flex;
                justify-content: start;
            }

            [class*="__menu"] {
                display: flex !important;
            }

            [class*="__actions"] button.mobile-menu-toggle {
                display: none;
            }

            form[role="search"] {
                max-width: var( --primary-nav-search-width);
                margin-top: unset;
            }
        }

        .primary-nav--inline#{$mod} {
            grid-template-columns: 1fr auto auto;
            grid-template-areas:
                "logo menu buttons";

            [class*="__menu"] {
                padding: unset;
                justify-content: flex-end;

                align-items: center;

                > ul {
                    display: flex;
                    align-items: stretch;

                    height: 100%;

                    > li {
                        display: flex;

                        margin-inline-start: var(--nav-gap);
                        margin-inline-end: var(--nav-gap);
                        margin-bottom: 0 !important;
                    }

                    > li > .nav__dropdown {
                        position: absolute;

                        min-width: 200px;
                        padding: var(--nav-gap);
                        margin-inline-start: calc(var(--nav-gap) * -1);
                        margin-inline-end: calc(var(--nav-gap) * -1);
                    }

                    > li > a,
                    > li > button {
                        margin-top: auto;
                        margin-bottom: auto;
                    }
                }

                form[role="search"] {
                    margin-inline-start: var(--primary-nav-padding-x);
                }

            }
        }

        .primary-nav--below#{$mod} {
            grid-template-columns: 1fr auto;
            grid-template-areas:
                "logo buttons"
                "menu menu";

            > [class*="__actions"] {
                border-top-style: none !important;
            }

            > [class*="__menu"] {
                padding: unset;

                > ul {
                    flex-grow: 1;
                }
            }

            > [class*="__menu"] > ul {
                display: flex;
                align-items: stretch;

                > li {
                    display: flex;
                    flex: 1;

                    margin-bottom: unset !important;
                    
                    border-bottom-style: none !important;
                    
                    text-align: center;
                }

                > li > button {
                    width: 100%;
                }

                > li > a, 
                > li > button,
                > li > .nav__dropdown {
                    padding: var(--nav-divider-padding-y) var(--nav-divider-padding-x);
                }

                > li:not(:last-child){
                    border-inline-end-width: var(--default-border-width);
                    border-inline-end-style: var(--default-border-style);
                }

                > li > a {
                    width: 100%;
                    
                    padding: var(--nav-divider-padding-y) var(--nav-divider-padding-x);
                    
                    text-align: center;
                }

                [data-toggle="dropdown"] {
                    justify-content: center;
                }

                .nav__dropdown {
                    position: absolute;

                    width: 100%;
                    
                    inset-inline-start: 0;
                }
            }

            form[role="search"] .form-entry__field {
                border-block-start-width: 0;
                border-inline-end-width: 0;
                border-block-end-width: 0;
            }

        }

    }
}