/*

In this file:

// A. Modules
// B. Variables
// C. Utilities

*/

//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use 'sass:map';
@use './breakpoint';
@use './color';

//////////////////////////////////////////////
// B. Variables
//////////////////////////////////////////////

// Scoped to Root

:root {
    --border-width: 1px;
    
    --border-style: solid;

    --border-radius: 0.25em;
}

//////////////////////////////////////////////
// C. Utilities
//////////////////////////////////////////////

@layer utility {

    [class*="border"]{
        border-color: var(--border-color, inherit);
    }

    // Directional

    @each $breakpoint in map.keys(breakpoint.$breakpoints) {
        @include breakpoint.breakpoint-up($breakpoint) {
            $mod: breakpoint.breakpoint-modifier($breakpoint, breakpoint.$breakpoints);

            .border#{$mod} {
                border-width: var(--border-width);
                border-style: var(--border-style);
            }

            .border-top#{$mod} {
                border-block-start-width: var(--border-width);
                border-block-start-style: var(--border-style);
            }

            .border-right#{$mod} {
                border-inline-end-width: var(--border-width);
                border-inline-end-style: var(--border-style);
            }

            .border-bottom#{$mod} {
                border-block-end-width: var(--border-width);
                border-block-end-style: var(--border-style);
            }

            .border-left#{$mod} {
                border-inline-start-width: var(--border-width);
                border-inline-start-style: var(--border-style);
            }
            
        }
    }

    // Color 

    @each $name, $color-map in color.$theme-colors {

        .border-color-#{$name} {
            border-color: map.get( $color-map, "swatch");
        }

        .border-top-color-#{$name} {
            border-block-start-color: map.get($color-map, "swatch");
        }

        .border-right-color-#{$name} {
            border-inline-end-color: map.get($color-map, "swatch");
        }

        .border-bottom-color-#{$name} {
            border-block-end-color: map.get($color-map, "swatch");
        }

        .border-left-color-#{$name} {
            border-inline-start-color: map.get($color-map, "swatch");
        }
    }

    // Radius

    [class*="border-radius"]{
        overflow: hidden;
    }

    @each $breakpoint in map.keys(breakpoint.$breakpoints) {
        @include breakpoint.breakpoint-up($breakpoint) {
            $mod: breakpoint.breakpoint-modifier($breakpoint, breakpoint.$breakpoints);

            .border-radius#{$mod} {
                border-radius: var(--border-radius);
            }

            .border-radius-top#{$mod} {
                border-top-left-radius: var(--border-radius);
                border-top-right-radius: var(--border-radius);
            }

            .border-radius-right#{$mod} {
                border-top-right-radius: var(--border-radius);
                border-bottom-right-radius: var(--border-radius);
            }

            .border-radius-bottom#{$mod} {
                border-bottom-right-radius: var(--border-radius);
                border-bottom-left-radius: var(--border-radius);
            }

            .border-radius-left#{$mod} {
                border-top-left-radius: var(--border-radius);
                border-bottom-left-radius: var(--border-radius);
            }

            .border-radius-pill#{$mod} {
                border-radius: 40rem;
            }

            .border-radius-circle#{$mod} {
                border-radius: 100%;
            }

        }
    }

} // end @layer